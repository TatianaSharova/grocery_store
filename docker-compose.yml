volumes:
  pg_data:
  static:
  media:
  prometheus_data:
  grafana_data:


services:
  postgres_db:
    container_name: store_db
    image: postgres:15-alpine
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=${POSTGRES_PASSWORD} pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 1s
      timeout: 5s
      retries: 10

  backend:
    build: ./store/
    container_name: store_backend
    env_file: .env
    volumes:
      - static:/backend_static/
      - media:/app/media/
    depends_on:
      postgres_db:
          condition: service_healthy
  
  nginx:
    build: ./nginx/
    container_name: store_nginx
    env_file: .env
    volumes:
      - static:/staticfiles/
      - media:/app/media/
    ports:
      - ${PORT}:80
    depends_on:
      - backend
  
  postgres_exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    container_name: store_postgres_exporter
    env_file: .env
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@store_db:5432/${POSTGRES_DB}?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - postgres_db

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter
    container_name: store_nginx-exporter
    command:
      - "--nginx.scrape-uri=http://store_nginx:80/stub_status"
    ports:
      - 9113:9113
    depends_on:
      - nginx

  prometheus:
    build: ./monitoring
    container_name: store_prometheus
    volumes:
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    depends_on:
      - postgres_exporter
      - nginx-exporter
  
  grafana:
    image: grafana/grafana
    container_name: store_grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus